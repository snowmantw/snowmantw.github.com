<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Software Testing | Snowmantw's Blog]]></title>
  <link href="http://snowmantw.github.com/blog/categories/software-testing/atom.xml" rel="self"/>
  <link href="http://snowmantw.github.com/"/>
  <updated>2012-09-21T16:29:12+08:00</updated>
  <id>http://snowmantw.github.com/</id>
  <author>
    <name><![CDATA[snowmantw]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reading: Applying hardware testing concepts to software]]></title>
    <link href="http://snowmantw.github.com/blog/2012/06/22/reading-applying-hardware-testing-concepts-to-software/"/>
    <updated>2012-06-22T22:13:00+08:00</updated>
    <id>http://snowmantw.github.com/blog/2012/06/22/reading-applying-hardware-testing-concepts-to-software</id>
    <content type="html"><![CDATA[<p><a href="http://www.dodgycoder.net/2012/06/applying-hardware-testing-concepts-to.html">這篇文章</a>講述作者 <a href="http://www.blogger.com/profile/14418022725678218844">Dodgy_Coder</a> 自己測試 GUI 程式的經驗，
他覺得軟體的測試在時間長度的概念上可以借鑒硬體的測試概念分三種時間相關的測試概念</p>

<ol>
<li>短：功能性測試，包括 Unit Testing 與 Integration Testing。這邊可以除去絕大部分的問題。</li>
<li>中：用來測試與減少隨機錯誤。隨機錯誤不太可能完全清除，但可以儘量減少、消除到機率合乎標準</li>
<li>長：將軟體執行到超乎一般時間的長，用來測試諸如記憶體洩漏、效能下降等問題。</li>
</ol>


<p>作者自己的經驗是他的程式一般只會開半小時，他故意開著兩個小時作測試，
然後在第一個小時時就發現了記憶體洩漏與效能下降的問題，並修正之。</p>

<p>其他概念可以上作者文章看；他那張引自 <a href="http://upload.wikimedia.org/wikipedia/commons/6/6e/Bathtub_curve.jpg">wikipedia</a> 的圖還蠻好的</p>

<p><img src="http://upload.wikimedia.org/wikipedia/commons/6/6e/Bathtub_curve.jpg" alt="Bathub curve about testing" /></p>
]]></content>
  </entry>
  
</feed>
